% =========================================================================
% The following script parses the telemetry data generated by UCSCAP
% and produces a Matrix with the resulting data. If asked to, it also plots
% all the values.
% It returns Five matrices. 
% 1.- Position and Attitude (phi theta psi p q r x y z vx vy vz)
% 2.- GPS Data (lat lon height COG SOG yr mo dy hr min sec hdop sats)
% 3.- Bias (axb ayb azb gxb gyb gzb)
% 4.- Raw data (Gyros, Accels and Mags)
% 5.- Air Data and Diag
% 6.- Time vector
%
% Code by: Mariano Lizarraga 
% Last Revision: Nov 2008
%==========================================================================
%% Function header
function [M PosAtt GPS Bias Raw AirDiag time] = parseTelemetry (filename, plotData, validateGPS)
% clear the screen
clc;
% parse the comma separated value file
%M_ld = load(filename);
%M = M_ld.M;
M = filename;

%% Index Definitions

% Attitude
% ========
timeStampIdx    = 1;
attRollIdx      = 2;
attPitchIdx     = 3;
attYawIdx       = 4;
attPIdx         = 5;
attQIdx         = 6;
attRIdx         = 7;

% Position
% ========
posXIdx         = 8;
posYIdx         = 9;
posZIdx         = 10;
posVxIdx        = 11;
posVyIdx        = 12;
posVzIdx        = 13;

% GPS
% ===
gpsYrIdx        = 14;
gpsMoIdx        = 15;
gpsDyIdx        = 16;
gpsHrIdx        = 17;
gpsMnIdx        = 18;
gpsScIdx        = 19;
gpsLatIdx       = 20;
gpsLonIdx       = 21;
gpsHeiIdx       = 22;
gpsCogIdx       = 23;
gpsSogIdx       = 24;
gpsHdoIdx       = 25;
gpsFixIdx       = 26;
gpsSatIdx       = 27;
gpsNewIdx       = 28;

% Raw Data
% ========
rawGxIdx        = 29;
rawGyIdx        = 30;
rawGzIdx        = 31;
rawAxIdx        = 32;
rawAyIdx        = 33;
rawAzIdx        = 34;
rawMxIdx        = 35;
rawMyIdx        = 36;
rawMzIdx        = 37;

% Bias
% ====
biaAxIdx        = 38;
biaAyIdx        = 39;
biaAzIdx        = 40;
biaGxIdx        = 41;
biaGyIdx        = 42;
biaGzIdx        = 43;

% Air data and Diagnostics
airDynIdx       = 44;
airStaIdx       = 45;
airTemIdx       = 46;
diaFl1Idx       = 47;
diaFl2Idx       = 48;
diaFl3Idx       = 49;
diaSh1Idx       = 50;
diaSh2Idx       = 51;
diaSh3Idx       = 52;

%% if we need to validate GPS
idxIni = 1;
idxEnd = size(M,1);

if (validateGPS == 1)
    while (M(idxIni,gpsSatIdx) < 3)
        idxIni = idxIni +1;
    end
end;

%% Assemple the return matrices
%PosAtt GPS Bias Raw AirDiag Time

time   = (M(idxIni:idxEnd,timeStampIdx))*0.01 ;

tmIdx =  find(time == 0);
tmOneIdx = find(tmIdx ==1);
tmIdx(tmOneIdx) = [];
while (~isempty(tmIdx) )
    increment = time(tmIdx(1)-1)+0.01;
    time(tmIdx(1):end) = time(tmIdx(1):end)+increment;
    tmIdx =  find(time(tmIdx(1)+2:end) == increment);
end;

time = time - time(1);

    
%time   = M(idxIni:idxEnd,timeStampIdx);

phi = M(idxIni:idxEnd,attRollIdx);
the = M(idxIni:idxEnd,attPitchIdx);
psi = M(idxIni:idxEnd,attYawIdx);
p   = M(idxIni:idxEnd,attPIdx);
q   = M(idxIni:idxEnd,attQIdx);
r   = M(idxIni:idxEnd,attRIdx);

x   = M(idxIni:idxEnd,posXIdx);
y   = M(idxIni:idxEnd,posYIdx);
z   = M(idxIni:idxEnd,posZIdx);
vx  = M(idxIni:idxEnd,posVxIdx);
vy  = M(idxIni:idxEnd,posVyIdx);
vz  = M(idxIni:idxEnd,posVzIdx);

lat =  M(idxIni:idxEnd,gpsLatIdx);
lon =  M(idxIni:idxEnd,gpsLonIdx);
hei =  M(idxIni:idxEnd,gpsHeiIdx);
cog =  M(idxIni:idxEnd,gpsCogIdx);
sog =  M(idxIni:idxEnd,gpsSogIdx)/100;
sec =  M(idxIni:idxEnd,gpsScIdx);
sat =  M(idxIni:idxEnd,gpsSatIdx);

rgx =  M(idxIni:idxEnd,rawGxIdx);
rgy =  M(idxIni:idxEnd,rawGyIdx);
rgz =  M(idxIni:idxEnd,rawGzIdx);

rax =  M(idxIni:idxEnd,rawAxIdx);
ray =  M(idxIni:idxEnd,rawAyIdx);
raz =  M(idxIni:idxEnd,rawAzIdx);

rmx =  M(idxIni:idxEnd,rawMxIdx);
rmy =  M(idxIni:idxEnd,rawMyIdx);
rmz =  M(idxIni:idxEnd,rawMzIdx);

bax =  M(idxIni:idxEnd,biaAxIdx);
bay =  M(idxIni:idxEnd,biaAyIdx);
baz =  M(idxIni:idxEnd,biaAzIdx);

bgx =  M(idxIni:idxEnd,biaGxIdx);
bgy =  M(idxIni:idxEnd,biaGyIdx);
bgz =  M(idxIni:idxEnd,biaGzIdx);

dyn = M(idxIni:idxEnd,airDynIdx);
sta = M(idxIni:idxEnd,airStaIdx);
oat = M(idxIni:idxEnd,airTemIdx);

fl1 = M(idxIni:idxEnd,diaFl1Idx);
fl2 = M(idxIni:idxEnd,diaFl2Idx);
fl3 = M(idxIni:idxEnd,diaFl3Idx);

sh1 = M(idxIni:idxEnd,diaSh1Idx);
sh2 = M(idxIni:idxEnd,diaSh2Idx);
sh3 = M(idxIni:idxEnd,diaSh3Idx);

%%
 if plotData == 1
    
    % plot the rates and euler angles
    figure(1)
    subplot(2,3,1)
        plot(time, p);
        title('Roll Rate p');
        ylabel('Radians/s');
    subplot(2,3,2)
        plot(time, q);
        title('Pitch Rate q');        
    subplot(2,3,3)
        plot(time, r);
        title('Yaw Rate r');        
    subplot(2,3,4)
        plot(time, phi);
        title('Roll \phi');        
        xlabel('Time (ms)');
        ylabel ('Radians');
    subplot(2,3,5)
        plot(time, the);
        title('Pitch \theta');        
        xlabel('Time (ms)');
    subplot(2,3,6)
        plot(time, psi);
        title('Yaw \psi');        
        xlabel('Time (ms)');
        
    
    
    % plot the accelerations
    figure(2)
    subplot(3,1,1)
        plot(time, rax);
        title('Raw Acceleration in X');        
    subplot(3,1,2)
        plot(time, ray);
        title('Raw Acceleration in Y');                
    subplot(3,1,3)
        plot(time, raz);
        title('Raw Acceleration in z');                
        xlabel('Time (ms)');
        
    figure(3)
    subplot(3,1,1)
        plot(time, rgx);
        title('Raw Gyro X');        
    subplot(3,1,2)
        plot(time, rgy);
        title('Raw Gyro Y');                
    subplot(3,1,3)
        plot(time, rgz);
        title('Raw Gyro z');                
        xlabel('Time (ms)');

    % plot the Pressures
    figure(4)
    subplot(2,1,1)
        plot(time, dyn);
        title('Raw Dynamic Pressure');        
    subplot(2,1,2)
        plot(time, sta);
        title('Raw Static Pressure');                
        xlabel('Time (ms)');

    %Plot the Velocities
    figure(5)
    subplot(3,1,1)
        plot(time, vx);
        title('Velocity X');        
    subplot(3,1,2)
        plot(time, vy);
        title('Velocity Y');                
    subplot(3,1,3)
        plot(time, vz);
        title('Velocity z');                
        xlabel('Time (ms)');

    figure(6)
    subplot(3,1,1)
        plot(time, x);
        title('Position X');        
    subplot(3,1,2)
        plot(time, y);
        title('Position Y');                
    subplot(3,1,3)
        plot(time, z);
        title('Position z');                
        xlabel('Time (ms)');

    figure(7)
        plot(y,x);
        title('XY Position plot');        

    figure(8)
        plot3(y,x,z);
        title('XYZ Position plot');        

    figure(9)
        plot(lon, lat);
        title('Lat Lon Position plot');        

    figure(10)
        plot3(lon,lat, hei);
        title('Lat Lon Height Position plot'); 

    figure(11)
    subplot(3,1,1)
        plot(time, cog);
        title('Course Over Ground from GPS');        
    subplot(3,1,2)
        plot(time, sog);
        title('Speed Over Ground from GPS');                
    subplot(3,1,3)
        plot(time, sat);
        title('Satellites in Use');                
        xlabel('Time (ms)');

    figure(12)
    subplot(2,3,1)
        plot(time, bgx);
        title('Bias Gyro X');
        ylabel('Radians/s');
    subplot(2,3,2)
        plot(time, bgy);
        title('Bias Gyro Y');        
    subplot(2,3,3)
        plot(time, bgz);
        title('Bias Gyro Z');        
    subplot(2,3,4)
        plot(time, bax);
        title('Bias Accel X');        
        xlabel('Time (ms)');
        ylabel ('m/s');
    subplot(2,3,5)
        plot(time, bay);
        title('Bias Accel Y');        
        xlabel('Time (ms)');
    subplot(2,3,6)
        plot(time, baz);
        title('Bias Accel Z');        
        xlabel('Time (ms)');

 figure(13)
    subplot(3,1,1)
        plot(time, fl1);
        title('Diagnostics Float 1');        
    subplot(3,1,2)
        plot(time, fl2);
        title('Diagnostics Float 2');                
    subplot(3,1,3)
        plot(time, fl3);
        title('Diagnostics Float 3');                
        xlabel('Time (ms)');

 figure(14)
    subplot(3,1,1)
        plot(time, sh1);
        title('Diagnostics Short 1');        
    subplot(3,1,2)
        plot(time, sh2);
        title('Diagnostics Short 2');                
    subplot(3,1,3)
        plot(time, sh3);
        title('Diagnostics Short 3');                
        xlabel('Time (ms)');

 figure(15)
    subplot(2,1,1)
        plot(time, sec);
        title('GPS Seconds');        
    subplot(2,1,2)
        plot(diff(sec));
        title('Update Rate');                
        
 end % if plots are required

%% Return Values
PosAtt = [phi the psi p q r x y z vx vy vz];
GPS = [lat lon hei cog sog sec];
Bias = [bgx bgy bgz bax bay baz];
Raw = [rgx rgy rgz rax ray raz rmx rmy rmz];
AirDiag = [sta dyn oat];

